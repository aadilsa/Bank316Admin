import React, { useEffect, useState } from 'react'
import { useFormik } from 'formik'
import { AddRoles } from '../../API/RoleApi/Role';
import * as yup from 'yup';
import { useLocation, useNavigate } from 'react-router-dom';
import Container from '../../component/container'
import { getRoleById, updateRole } from '../../API/RoleApi/Role';
import { toast } from 'react-toastify';
import 'react-toastify/dist/ReactToastify.css';



const addErrorToast = (msg) => {
    toast.error(msg, {
        autoClose: 2000
    });
}


export default function EditRole() {
    const [title, settitle] = useState()
    const [permission, setpermissions] = useState([])
    const [roles, setroles] = useState({})
    const [employeeData, setEmployeeData] = useState([]);
    const navigate = useNavigate()
    const token = localStorage.getItem("logintoken")



    const location = useLocation()
    const RoleDatabyId = async () => {
        try {
            const resp = await getRoleById(token, location.state)
            if (resp.status == true) {
                settitle(resp?.data.title)

                setpermissions(resp?.data?.permission)
                // const id = resp.data.profile.id
            }
        }
        catch (err) {
            console.log(err)
        }
    }
    useEffect(() => {
        RoleDatabyId()
    }, [])


    if (permission) {
        try {
            var permissions = JSON.parse(permission);


        } catch (error) {
            // console.error("Error parsing JSON:", error);
        }
    } else {
        // Handle the case when permission is empty or not provided.
    }


    // if (permissions.constructor.name == "Object") {
    //     let emptarray = []
    //     for (let i in permissions) {
    //         emptarray.push(permissions[i])
    //     }
    //     permissions = emptarray
    // }
    // console.log(permissions)


    while (typeof (permissions) == "string") {
        permissions = JSON.parse(permissions);
    }

    const updateEmployeeData = (e, key) => {
        const checkboxValue = e.target.value;
        const isChecked = e.target.checked;
        if (isChecked) {
            setEmployeeData((prevData) => [...prevData, { value: checkboxValue, key }]);

        } else {
            while (typeof (permissions) == "string") {
                permissions = JSON.parse(permissions);
            }
            // console.log(permissions, "##############", key)
            // setpermissions((prevData) => {
            //     console.log(prevData, "prevDataprevDataprevDataprevDataprevData111111", typeof (prevData))
            //     // return (prevData.filter((item) => { return (item.key != key) })
            //     // )
            // });
            if (typeof (permissions) != "string") {
                console.log(permissions, "((((9999999999999999999")
                let rr = permissions.filter((item) => { return (item.key != key) });
                // console.log(rr, "??????????????@@@@@@@@@@@@@@@")
                setpermissions(rr)
            }

            setEmployeeData((prevData) => prevData.filter((item) => { return (item.key != key) }));
        }
    };

    console.log(permissions, "&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&")
    console.log(employeeData, "employyyeyeyeey")

    useEffect(() => {
        permissions?.map((options) => {
            // console.log(options, "options")

            if (options.key == "get_all_clients") {
                roles.get_all_clients = true;
            }
            if (options.key == "get_single_client") {
                roles.get_single_client = true;
            }
            if (options.key == "employee_view") {
                roles.employee_view = true;
            }
            if (options.key == "employee_add") {
                roles.employee_add = true;
            }
            if (options.key == "employee_edit") {
                roles.employee_edit = true;
            }
            if (options.key == "employee_delete") {
                roles.employee_delete = true;
            }
            if (options.key == "get_all_currency_wallet_transaction") {
                roles.get_all_currency_wallet_transaction = true;
            }
            if (options.key == "get_all_currency") {
                roles.get_all_currency = true;
            }
            if (options.key == "get_single_currency") {
                roles.get_single_currency = true;
            }
            if (options.key == "update_currency") {
                roles.update_currency = true;
            }
            if (options.key == "delete_currency") {
                roles.delete_currency = true;
            }
            if (options.key == "get_wallet_icons") {
                roles.get_wallet_icons = true;
            }
            if (options.key == "create_wallet") {
                roles.create_wallet = true;
            }
            if (options.key == "update_wallet_icon") {
                roles.update_wallet_icon = true;
            }
            if (options.key == "delete_wallet_icon") {
                roles.delete_wallet_icon = true;
            }
        })
        setroles(roles)
    }, [permissions])


    useEffect(() => {
        let array = []
        for (let i in roles) {
            if (roles[`${i}`] == true) {
                array.push({ value: true, key: i })
            }
        }
        setEmployeeData([...array]);
    }, [roles])



    useEffect(() => {
        form.setValues({
            title: title,
        })
    }, [title])



    const form = useFormik({
        enableReinitialize: true,
        validationSchema: yup.object({
            title: yup.string().required('Please Enter Role Title'),
        }),
        onSubmit: async (values) => {

            const data = {
                "title": values.title,
                "permissions": [...employeeData, ...permissions]
            }

            const response = await updateRole(token, data, location.state)
            console.log(response)
            if (response.status == true) {

                toast.success(response.message)
                setTimeout(() => {
                    navigate("/manage-roles")
                }, 1000)

            } else if (response.status == false) {
                console.log(response)
                addErrorToast(response.message)
            }
        }
    })


    return (
        <>
            <Container>
                <div className="nk-content ">
                    <div className="container-fluid">
                        <div className="nk-content-inner">
                            <div className="nk-content-body">
                                <div className="nk-block-head nk-block-head-sm">
                                    <div className="nk-block-between">
                                        <div className="nk-block-head-content">
                                            <h3 className="nk-block-title page-title">Edit Role</h3>

                                        </div>{/* .nk-block-head-content */}
                                        <div className="nk-block-head-content">
                                            <div className="toggle-wrap nk-block-tools-toggle">
                                                <a className="btn btn-icon btn-trigger toggle-expand me-n1" data-target="pageMenu"><em className="icon ni ni-menu-alt-r" /></a>
                                                <div className="toggle-expand-content" data-content="pageMenu">
                                                    <ul className="nk-block-tools g-3">
                                                        <li> <div className="nk-block-head-content" onClick={() => { navigate("/manage-roles") }}>
                                                            <a className="btn btn-outline-light bg-white d-none d-sm-inline-flex"><em className="icon ni ni-arrow-left" /><span>Back</span></a>
                                                            <a className="btn btn-icon btn-outline-light bg-white d-inline-flex d-sm-none"><em className="icon ni ni-arrow-left" /></a>
                                                        </div></li>

                                                    </ul>
                                                </div>
                                            </div>{/* .toggle-wrap */}
                                        </div>{/* .nk-block-head-content */}
                                    </div>{/* .nk-block-between */}
                                </div>{/* .nk-block-head */}
                                <div className="nk-block">
                                    <div className="card card-stretch">
                                        <div className="card-inner-group">




                                            <div className="card-inner p-0">
                                                <div className="nk-tb-list nk-tb-ulist">
                                                    <div className="nk-tb-item nk-tb-head">
                                                        <div className="main-container container-fluid px-0">

                                                            <form className="row" id='registerForm'
                                                                onSubmit={form.handleSubmit}
                                                            >
                                                                <div className="row" style={{ padding: "2rem" }}>
                                                                    <div className="col-xl-4 col-lg-6 col-md-6 col-xm-12">
                                                                        <div className="form-group">
                                                                            <label className="form-label "><h6>Title</h6></label>
                                                                            <div className="row g-xs">
                                                                                <div className="input-group">
                                                                                    <input type="text" className="form-control" placeholder="Enter Role Title" {...form.getFieldProps("title")} />
                                                                                </div>
                                                                                {form.touched.title && form.errors.title ?
                                                                                    <div className="invalid-feedback" style={{ display: "block" }}>{form.errors.title}</div> : ''}
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                    <br></br>

                                                                    <div className="row mb-3">
                                                                        <label className="p-2"><h6>Customer</h6>
                                                                        </label>
                                                                        <div className="custom-controls-stacked d-flex mb-3">

                                                                            <label className="custom-control custom-checkbox diclamerpage" style={{ display: 'inline-flex', minHeight: '1.5rem', marginRight: '30px', }}>
                                                                                {roles.get_all_clients == true ? <input type="checkbox" defaultChecked={true} className="custom-control-input NewCHeckBx" value="true"
                                                                                    onChange={(e) => updateEmployeeData(e, "get_all_clients")}
                                                                                /> :
                                                                                    <input type="checkbox" className="custom-control-input NewCHeckBx" value="true"
                                                                                        onChange={(e) => updateEmployeeData(e, "get_all_clients")}
                                                                                    />

                                                                                }

                                                                                <span className="custom-control-label">View</span>
                                                                            </label>

                                                                            <label className="custom-control custom-checkbox diclamerpage" style={{ display: 'inline-flex', minHeight: '1.5rem', marginRight: '30px', }}>
                                                                                {
                                                                                    roles.get_single_client == true ? <input type="checkbox" defaultChecked={true} className="custom-control-input NewCHeckBx" value="true"
                                                                                        onClick={(e) => updateEmployeeData(e, "get_single_client")}
                                                                                    /> : <input type="checkbox" className="custom-control-input NewCHeckBx" value="true"
                                                                                        onClick={(e) => updateEmployeeData(e, "get_single_client")}
                                                                                    />
                                                                                }

                                                                                <span className="custom-control-label">View single Customer</span>
                                                                            </label>
                                                                        </div>
                                                                    </div>

                                                                    <div className="row mb-3">
                                                                        <label className="p-2"><h6>Employee</h6>
                                                                        </label>
                                                                        <div className="custom-controls-stacked d-flex mb-3">
                                                                            <label className="custom-control custom-checkbox diclamerpage" style={{ display: 'inline-flex', minHeight: '1.5rem', marginRight: '30px', }}>
                                                                                {
                                                                                    roles.employee_view == true ? <input type="checkbox" defaultChecked={true} className="custom-control-input NewCHeckBx" value="true"
                                                                                        onClick={(e) => updateEmployeeData(e, "employee_view")}
                                                                                    /> : <input type="checkbox" className="custom-control-input NewCHeckBx" value="true"
                                                                                        onClick={(e) => updateEmployeeData(e, "employee_view")}
                                                                                    />
                                                                                }

                                                                                <span className="custom-control-label">View</span>
                                                                            </label>

                                                                            <label className="custom-control custom-checkbox diclamerpage" style={{ display: 'inline-flex', minHeight: '1.5rem', marginRight: '30px', }}>
                                                                                {
                                                                                    roles.employee_add == true ? <input type="checkbox" defaultChecked={true} className="custom-control-input NewCHeckBx" value="true"
                                                                                        onClick={(e) => updateEmployeeData(e, "employee_add")}
                                                                                    /> : <input type="checkbox" className="custom-control-input NewCHeckBx" value="true"
                                                                                        onClick={(e) => updateEmployeeData(e, "employee_add")}
                                                                                    />
                                                                                }

                                                                                <span className="custom-control-label">Add Employee</span>
                                                                            </label>
                                                                            <label className="custom-control custom-checkbox diclamerpage" style={{ display: 'inline-flex', minHeight: '1.5rem', marginRight: '30px', }}>
                                                                                {
                                                                                    roles.employee_edit == true ? <input type="checkbox" defaultChecked={true} className="custom-control-input NewCHeckBx" value="true"
                                                                                        onClick={(e) => updateEmployeeData(e, "employee_edit")}
                                                                                    /> : <input type="checkbox" className="custom-control-input NewCHeckBx" value="true"
                                                                                        onClick={(e) => updateEmployeeData(e, "employee_edit")}
                                                                                    />
                                                                                }

                                                                                <span className="custom-control-label">Edit Employee</span>
                                                                            </label>
                                                                            <label className="custom-control custom-checkbox diclamerpage" style={{ display: 'inline-flex', minHeight: '1.5rem', marginRight: '30px', }}>
                                                                                {
                                                                                    roles.employee_delete == true ? <input type="checkbox" defaultChecked={true} className="custom-control-input NewCHeckBx" value="true"
                                                                                        onClick={(e) => updateEmployeeData(e, "employee_delete")}
                                                                                    /> : <input type="checkbox" className="custom-control-input NewCHeckBx" value="true"
                                                                                        onClick={(e) => updateEmployeeData(e, "employee_delete")}
                                                                                    />
                                                                                }

                                                                                <span className="custom-control-label">Delete Employee</span>
                                                                            </label>
                                                                        </div>
                                                                    </div>
                                                                    <div className="row mb-3">
                                                                        <label className="p-2"><h6>Currency</h6>
                                                                        </label>
                                                                        <div className="custom-controls-stacked d-flex mb-3">
                                                                            <label className="custom-control custom-checkbox diclamerpage" style={{ display: 'inline-flex', minHeight: '1.5rem', marginRight: '30px', }}>

                                                                                {
                                                                                    roles.get_all_currency_wallet_transaction == true ? <input type="checkbox" defaultChecked={true} className="custom-control-input NewCHeckBx" value="true"
                                                                                        onClick={(e) => updateEmployeeData(e, "get_all_currency_wallet_transaction")}
                                                                                    /> : <input type="checkbox" className="custom-control-input NewCHeckBx" value="true"
                                                                                        onClick={(e) => updateEmployeeData(e, "get_all_currency_wallet_transaction")}
                                                                                    />
                                                                                }

                                                                                <span className="custom-control-label">View</span>
                                                                            </label>

                                                                            <label className="custom-control custom-checkbox diclamerpage" style={{ display: 'inline-flex', minHeight: '1.5rem', marginRight: '30px', }}>
                                                                                {
                                                                                    roles.get_all_currency == true ? <input type="checkbox" defaultChecked={true} className="custom-control-input NewCHeckBx" value="true"
                                                                                        onClick={(e) => updateEmployeeData(e, "get_all_currency")}
                                                                                    /> : <input type="checkbox" className="custom-control-input NewCHeckBx" value="true"
                                                                                        onClick={(e) => updateEmployeeData(e, "get_all_currency")}
                                                                                    />
                                                                                }

                                                                                <span className="custom-control-label">View Single Currency</span>
                                                                            </label>


                                                                            <label className="custom-control custom-checkbox diclamerpage" style={{ display: 'inline-flex', minHeight: '1.5rem', marginRight: '30px', }}>
                                                                                {
                                                                                    roles.get_single_currency == true ? <input type="checkbox" defaultChecked={true} className="custom-control-input NewCHeckBx" value="true"
                                                                                        onClick={(e) => updateEmployeeData(e, "get_single_currency")}
                                                                                    /> : <input type="checkbox" className="custom-control-input NewCHeckBx" value="true"
                                                                                        onClick={(e) => updateEmployeeData(e, "get_single_currency")}
                                                                                    />
                                                                                }

                                                                                <span className="custom-control-label">Add Currency</span>
                                                                            </label>


                                                                            <label className="custom-control custom-checkbox diclamerpage" style={{ display: 'inline-flex', minHeight: '1.5rem', marginRight: '30px', }}>
                                                                                {
                                                                                    roles.update_currency == true ? <input type="checkbox" defaultChecked={true} className="custom-control-input NewCHeckBx" value="true"
                                                                                        onClick={(e) => updateEmployeeData(e, "update_currency")}
                                                                                    /> : <input type="checkbox" className="custom-control-input NewCHeckBx" value="true"
                                                                                        onClick={(e) => updateEmployeeData(e, "update_currency")}
                                                                                    />
                                                                                }

                                                                                <span className="custom-control-label">Edit Currency</span>
                                                                            </label>


                                                                            <label className="custom-control custom-checkbox diclamerpage" style={{ display: 'inline-flex', minHeight: '1.5rem', marginRight: '30px', }}>
                                                                                {
                                                                                    roles.delete_currency == true ?
                                                                                        <input type="checkbox" defaultChecked={true} className="custom-control-input NewCHeckBx" value="true"
                                                                                            onClick={(e) => updateEmployeeData(e, "delete_currency")}
                                                                                        /> : <input type="checkbox" className="custom-control-input NewCHeckBx" value="true"
                                                                                            onClick={(e) => updateEmployeeData(e, "delete_currency")}
                                                                                        />
                                                                                }

                                                                                <span className="custom-control-label">Delete Currency</span>
                                                                            </label>
                                                                        </div>
                                                                    </div>

                                                                    <div className="row mb-3">
                                                                        <label className="p-2"><h6>Wallet Icon</h6>
                                                                        </label>
                                                                        <div className="custom-controls-stacked d-flex mb-3">
                                                                            <label className="custom-control custom-checkbox diclamerpage" style={{ display: 'inline-flex', minHeight: '1.5rem', marginRight: '30px', }}>
                                                                                {
                                                                                    roles.get_wallet_icons == true ? <input type="checkbox" defaultChecked={true} className="custom-control-input NewCHeckBx" value="true"
                                                                                        onClick={(e) => updateEmployeeData(e, "get_wallet_icons")}
                                                                                    /> : <input type="checkbox" className="custom-control-input NewCHeckBx" value="true"
                                                                                        onClick={(e) => updateEmployeeData(e, "get_wallet_icons")}
                                                                                    />
                                                                                }

                                                                                <span className="custom-control-label">View</span>
                                                                            </label>


                                                                            <label className="custom-control custom-checkbox diclamerpage" style={{ display: 'inline-flex', minHeight: '1.5rem', marginRight: '30px', }}>
                                                                                {
                                                                                    roles.create_wallet == true ? <input type="checkbox" defaultChecked={true} className="custom-control-input NewCHeckBx" value="true"
                                                                                        onClick={(e) => updateEmployeeData(e, "create_wallet")}
                                                                                    /> : <input type="checkbox" className="custom-control-input NewCHeckBx" value="true"
                                                                                        onClick={(e) => updateEmployeeData(e, "create_wallet")}
                                                                                    />
                                                                                }

                                                                                <span className="custom-control-label">Add Wallet Icon</span>
                                                                            </label>

                                                                            <label className="custom-control custom-checkbox diclamerpage" style={{ display: 'inline-flex', minHeight: '1.5rem', marginRight: '30px', }}>
                                                                                {
                                                                                    roles.update_wallet_icon == true ? <input type="checkbox" defaultChecked={true} className="custom-control-input NewCHeckBx" value="true"
                                                                                        onClick={(e) => updateEmployeeData(e, "update_wallet_icon")}
                                                                                    /> : <input type="checkbox" className="custom-control-input NewCHeckBx" value="true"
                                                                                        onClick={(e) => updateEmployeeData(e, "update_wallet_icon")}
                                                                                    />
                                                                                }

                                                                                <span className="custom-control-label">Edit Wallet Icon</span>
                                                                            </label>

                                                                            <label className="custom-control custom-checkbox diclamerpage" style={{ display: 'inline-flex', minHeight: '1.5rem', marginRight: '30px', }}>
                                                                                {
                                                                                    roles.delete_wallet_icon ? <input type="checkbox" defaultChecked={true} className="custom-control-input NewCHeckBx" value="true"
                                                                                        onClick={(e) => updateEmployeeData(e, "delete_wallet_icon")}
                                                                                    /> : <input type="checkbox" className="custom-control-input NewCHeckBx" value="true"
                                                                                        onClick={(e) => updateEmployeeData(e, "delete_wallet_icon")}
                                                                                    />
                                                                                }

                                                                                <span className="custom-control-label">Delete Wallet Icon</span>
                                                                            </label>
                                                                        </div>
                                                                    </div>
                                                                    <div className="col-md-12">
                                                                        <button type="submit" className="btn btn-primary mb-6 w-md mt-1">Edit</button>
                                                                    </div>
                                                                </div>
                                                            </form>
                                                        </div>
                                                    </div>
                                                </div>{/* .nk-tb-list */}
                                            </div>{/* .card-inner */}










                                        </div>{/* .card-inner-group */}
                                    </div>{/* .card */}
                                </div>{/* .nk-block */}
                            </div>
                        </div>
                    </div>
                </div >
            </Container >
        </>
    )
}
